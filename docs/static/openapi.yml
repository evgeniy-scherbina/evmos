{"id":"evmos","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain evmos REST API","title":"HTTP API Console","contact":{"name":"evmos"},"version":"version not set"},"paths":{"/evmos.evm.Msg/EthereumTx":{"post":{"tags":["Msg"],"operationId":"EvmosMsg_EthereumTx","parameters":[{"description":"MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/evmos.evm.MsgEthereumTx"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/evmos.evm.MsgEthereumTxResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/evmos.evm.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"EvmosMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/evmos.evm.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/evmos.evm.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/evmos/evm/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"EvmosQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/evmos.evm.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"evmos.evm.ChainConfig":{"description":"ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int values\ninstead of *big.Int.","type":"object","properties":{"arrow_glacier_block":{"type":"string","title":"arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no fork, 0 = already activated)"},"berlin_block":{"type":"string","title":"berlin_block: Berlin switch block (nil = no fork, 0 = already on berlin)"},"byzantium_block":{"type":"string","title":"byzantium_block: Byzantium switch block (nil no fork, 0 = already on byzantium)"},"cancun_block":{"type":"string","title":"cancun_block switch block (nil = no fork, 0 = already on cancun)"},"constantinople_block":{"type":"string","title":"constantinople_block: Constantinople switch block (nil no fork, 0 = already activated)"},"dao_fork_block":{"type":"string","title":"dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)"},"dao_fork_support":{"type":"boolean","title":"dao_fork_support defines whether the nodes supports or opposes the DAO hard-fork"},"eip150_block":{"type":"string","title":"eip150_block: EIP150 implements the Gas price changes\n(https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no fork)"},"eip150_hash":{"type":"string","title":"eip150_hash: EIP150 HF hash (needed for header only clients as only gas pricing changed)"},"eip155_block":{"type":"string","title":"eip155_block: EIP155Block HF block"},"eip158_block":{"type":"string","title":"eip158_block: EIP158 HF block"},"gray_glacier_block":{"type":"string","title":"gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork, 0 = already activated)"},"homestead_block":{"type":"string","title":"homestead_block switch (nil no fork, 0 = already homestead)"},"istanbul_block":{"type":"string","title":"istanbul_block: Istanbul switch block (nil no fork, 0 = already on istanbul)"},"london_block":{"type":"string","title":"london_block: London switch block (nil = no fork, 0 = already on london)"},"merge_netsplit_block":{"type":"string","title":"merge_netsplit_block: Virtual fork after The Merge to use as a network splitter"},"muir_glacier_block":{"type":"string","title":"muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0 = already activated)"},"petersburg_block":{"type":"string","title":"petersburg_block: Petersburg switch block (nil same as Constantinople)"},"shanghai_block":{"type":"string","title":"shanghai_block switch block (nil = no fork, 0 = already on shanghai)"}}},"evmos.evm.MsgEthereumTx":{"description":"MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.","type":"object","properties":{"creator":{"type":"string"},"data":{"title":"data is inner transaction data of the Ethereum transaction","$ref":"#/definitions/google.protobuf.Any"},"from":{"type":"string","title":"from is the ethereum signer address in hex format. This address value is checked\nagainst the address derived from the signature (V, R, S) using the\nsecp256k1 elliptic curve"},"hash":{"type":"string","title":"hash of the transaction in hex format"},"size":{"type":"number","format":"double","title":"size is the encoded storage size of the transaction (DEPRECATED)"}}},"evmos.evm.MsgEthereumTxResponse":{"type":"object"},"evmos.evm.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/evmos.evm.Params"}}},"evmos.evm.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"evmos.evm.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"chain_config":{"title":"chain_config defines the EVM chain configuration parameters","$ref":"#/definitions/evmos.evm.ChainConfig"}}},"evmos.evm.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/evmos.evm.Params"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}